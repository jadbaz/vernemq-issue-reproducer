events {}         # event context has to be defined to consider config valid

http {
    server {
        listen              4443 ssl;
        server_name         mqtt.broker;

        ssl_certificate     /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_client_certificate  /etc/nginx/ssl/ca-bundle.crt;
        ssl_verify_client on;

        location / {
            # https://stackoverflow.com/questions/32845674/setup-nginx-not-to-crash-if-host-in-upstream-is-not-found/32846603#32846603
            resolver 127.0.0.1 valid=30s;

            proxy_http_version 1.1;
            proxy_set_header        Upgrade             $http_upgrade;
            proxy_set_header        Connection          "upgrade";
            proxy_set_header        X-Forwarded-Proto   $scheme;
            proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Host    $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            proxy_set_header        Host                $host;

            # this is what vernemq uses to assign username based on cert common name
            proxy_set_header        X-SSL-CERT          $ssl_client_escaped_cert;

            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            client_body_timeout 5m;
            
            proxy_pass http://mqttbroker:8080;
        }
    }
}

# http://nginx.org/en/docs/stream/ngx_stream_ssl_preread_module.html
# https://stackoverflow.com/questions/34741571/nginx-tcp-forwarding-based-on-hostname/40135151#40135151

stream {
    map $ssl_preread_server_name $target {
       default mqttbroker;
    }
    upstream mqttbroker {
        server 127.0.0.1:4443;
    }

    server {
        listen 0.0.0.0:443;
        proxy_connect_timeout 10s;
        proxy_timeout 5m;

        proxy_pass $target;
        ssl_preread on;
    }

    log_format basic '$remote_addr [$time_local] ' '$ssl_preread_server_name' '$protocol $status $bytes_sent $bytes_received ' '$session_time';
    access_log  /var/log/nginx/access.log basic;
    error_log  /var/log/nginx/error.log error;
}